pipeline {

    agent any

    environment {
        GHCR_TOKEN = credentials('GHCR_TOKEN')
        DISCORD_WEBHOOK = credentials('DISCORD_WEBHOOK')
    }

    tools {
        nodejs 'nodejs'
    }

    stages {
        stage("Install Dependencies") {
            steps {
                dir("bdlist-backend/") {
                    echo "Installing dependencies..."
                    sh "pnpm i"
                }
            }
        }

        stage ("Transpile TypeScript to JavaScript") {
            steps {
                dir("bdlist-backend/") {
                    echo "Transpiling TypeScript to JavaScript..."
                    sh "pnpm build"
                }
            }
        }

        stage ("Multi-platform Dockerize API and push to ghcr.io") {
            when { branch 'main' }
            steps {
                dir("bdlist-backend/") {
                    echo "Grabbing version number for Docker tag..."
                    script {
                        TAG = sh(script: "jq -r '.version' src/version.json", returnStdout: true).trim();
                    }
                    sh 'docker login ghcr.io -u PScoriae -p $GHCR_TOKEN'
                    sh "docker buildx build --push --platform linux/amd64,linux/arm64 --builder=build-container -t ghcr.io/shuttleday/api:$TAG -t ghcr.io/shuttleday/api . "
                }
            }
        }

        stage ("Trigger Update Manifest Pipeline") {
            when { branch 'main' }
            steps {
                dir("bdlist-backend/") {
                    echo "Triggering Update Manifest pipeline"
                    build job: 'shuttleday-update-k8s-manifest', parameters: [string(name: 'DOCKERTAG', value: TAG)]
                }
            }
        }  
    }

    post {
        always {
            discordSend description: "Jenkins Pipeline Build", link: env.BUILD_URL, result: currentBuild.currentResult, title: JOB_NAME, webhookURL: DISCORD_WEBHOOK
        }
    }
}